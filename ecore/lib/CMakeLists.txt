#############################################################################
#                                                                           #
#             CMakeList created by soft.generator.cpp Generator             # 
#                                                                           #
#############################################################################

# C++ project for model ecore.ecore, generated by soft.generator.cpp

CMAKE_MINIMUM_REQUIRED(VERSION 3.12)

project(ecore.lib VERSION 1.0.0 LANGUAGES CXX)

if(NOT CMAKE_BUILD_TYPE) 
    set(CMAKE_BUILD_TYPE Debug)
endif()
set(CMAKE_CXX_STANDARD 17)

#dependencies
find_package(XercesC REQUIRED)
find_package(Threads REQUIRED)
find_package(Boost REQUIRED regex)

#cmake files
include( CMakeFiles.txt OPTIONAL)
include( CMakeGenerated.txt OPTIONAL)
set(CMAKE_FILES
    CMakeLists.txt
)
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/CMakeFiles.txt")
   list(APPEND CMAKE_FILES "CMakeFiles.txt")
endif()
if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/CMakeGenerated.txt")
   list(APPEND CMAKE_FILES "CMakeGenerated.txt")
endif()

set(PROJECT_SOURCES ${CMAKE_FILES}
                    ${GENERATED_HEADER_ECORE_EXT_FILES}
                    ${GENERATED_HEADER_ECORE_FILES}
                    ${GENERATED_HEADER_ECORE_IMPL_FILES}
                    ${GENERATED_HEADER_FILES}
                    ${GENERATED_SOURCE_ECORE_EXT_FILES}
                    ${GENERATED_SOURCE_ECORE_FILES}
                    ${GENERATED_SOURCE_ECORE_IMPL_FILES}
                    ${GENERATED_SOURCE_FILES}
                    ${HEADER_ECORE_EXT_FILES}
                    ${HEADER_ECORE_FILES}
                    ${HEADER_ECORE_IMPL_FILES}
                    ${HEADER_FILES}
                    ${SOURCE_ECORE_EXT_FILES}
                    ${SOURCE_ECORE_FILES}
                    ${SOURCE_ECORE_IMPL_FILES}
                    ${SOURCE_FILES} )

# shared library
add_library(ecore SHARED ${PROJECT_SOURCES})
add_library(ecore::shared ALIAS ecore)
target_include_directories(ecore
    PUBLIC
        $<INSTALL_INTERFACE:include>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src-gen>
)
target_compile_options(ecore PRIVATE /MP /wd4250 /wd4251 /bigobj)
target_compile_definitions( ecore PRIVATE ECORE_EXPORTS)
target_compile_definitions( ecore PRIVATE _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING)
target_link_libraries(ecore PUBLIC XercesC::XercesC Boost::regex)

# static library
add_library(ecore.static STATIC ${PROJECT_SOURCES})
add_library(ecore::static ALIAS ecore.static)
target_include_directories(ecore.static
    PUBLIC
        $<INSTALL_INTERFACE:include>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src-gen>
)
target_compile_options(ecore.static PRIVATE /MP /wd4250 /bigobj)
target_compile_definitions(ecore.static PUBLIC ECORE_STATIC_LIB)
target_compile_definitions(ecore.static PRIVATE _SILENCE_CXX17_CODECVT_HEADER_DEPRECATION_WARNING)
target_link_libraries(ecore.static PRIVATE XercesC::XercesC Boost::regex)

# libraries names
set_target_properties(ecore.static PROPERTIES PREFIX lib)
set_target_properties(ecore ecore.static PROPERTIES OUTPUT_NAME ecore-vc${MSVC_TOOLSET_VERSION}-mt$<$<CONFIG:Debug>:-gd>)

# Visual studio specific project layout
source_group(cmake FILES ${CMAKE_FILES})
source_group(src FILES ${HEADER_FILES} ${SOURCE_FILES})
source_group(src\\ecore FILES ${HEADER_ECORE_FILES} ${SOURCE_ECORE_FILES})
source_group(src\\ecore\\ext FILES ${HEADER_ECORE_EXT_FILES} ${SOURCE_ECORE_EXT_FILES})
source_group(src\\ecore\\impl FILES ${HEADER_ECORE_IMPL_FILES} ${SOURCE_ECORE_IMPL_FILES})
source_group(src-gen FILES ${GENERATED_HEADER_FILES} ${GENERATED_SOURCE_FILES})
source_group(src-gen\\ecore FILES ${GENERATED_HEADER_ECORE_FILES} ${GENERATED_SOURCE_ECORE_FILES})
source_group(src-gen\\ecore\\ext FILES ${GENERATED_HEADER_ECORE_EXT_FILES} ${GENERATED_SOURCE_ECORE_EXT_FILES})
source_group(src-gen\\ecore\\impl FILES ${GENERATED_HEADER_ECORE_IMPL_FILES} ${GENERATED_SOURCE_ECORE_IMPL_FILES})


#-----------------------------------------------------
# Install binaries and header
#-----------------------------------------------------
include(GNUInstallDirs)
install(TARGETS ecore ecore.static
        EXPORT  ecore.targets
        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})

install(FILES ${HEADER_FILES} ${GENERATED_HEADER_FILES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
install(FILES ${HEADER_ECORE_FILES} ${GENERATED_HEADER_ECORE_FILES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/ecore)
install(FILES ${HEADER_ECORE_EXT_FILES} ${GENERATED_HEADER_ECORE_EXT_FILES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/ecore/ext)
install(FILES ${HEADER_ECORE_IMPL_FILES} ${GENERATED_HEADER_ECORE_IMPL_FILES} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/ecore/impl)

install(EXPORT ecore.targets 
        FILE EcoreTargets.cmake 
        NAMESPACE Ecore:: 
        DESTINATION cmake)

include(CMakePackageConfigHelpers)
configure_package_config_file( EcoreConfig.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/EcoreConfig.cmake INSTALL_DESTINATION cmake )
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/EcoreConfig.cmake DESTINATION cmake)

#-----------------------------------------------------
# Package binaries and header
#-----------------------------------------------------
set(CPACK_GENERATOR "ZIP")
set(CPACK_PACKAGE_NAME ecore)

include(CPack)

